# -*- coding: utf-8 -*-
"""DTB.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sRM_1NIAjCbdqvItbG47eXGrJcyYFPpm
"""

import streamlit as st
import pandas as pd
from io import StringIO
import re

def clean_transaction_details(details):
    # Extract Payee and Memo
    match = re.match(r".*\|(.*?)\|(.*?)\|(.*?)\s+-?\d+.*", details)
    if match:
        payee = match.group(1).strip()
        memo = match.group(3).strip()
    else:
        payee = details[:30]
        memo = ""
    return payee, memo

def generate_iif(df):
    output = StringIO()
    output.write("!TRNS\tTRNSTYPE\tDATE\tACCNT\tNAME\tAMOUNT\tMEMO\tDOCNUM\tCLEAR\tCLASS\tTOPRINT\tADDR1\tDUEDATE\tTERMS\n")
    output.write("!SPL\tTRNSTYPE\tDATE\tACCNT\tNAME\tAMOUNT\tMEMO\tDOCNUM\tCLEAR\tCLASS\tTOPRINT\tADDR1\tDUEDATE\tTERMS\n")
    output.write("!ENDTRNS\n")

    for _, row in df.iterrows():
        trn_type = row['Transaction Type']
        date = pd.to_datetime(row['Date']).strftime('%m/%d/%Y')
        docnum = row['Reference ID']
        details = row['Transaction Details']
        credit = float(row['Credit'] or 0)
        debit = float(row['Debit'] or 0)
        charge = float(row['Charges'] or 0)
        commission = float(row['Commission Amount'] or 0)

        if trn_type == "MPESA FUNDS TRANSFER":
            continue  # Skip these

        payee, memo = clean_transaction_details(details)

        if trn_type == "Pesalink Transfer":
            # Treat as bill payment to vendor (A/P)
            output.write(f"TRNS\tCHECK\t{date}\tDiamond Trust Bank\t{payee}\t{-debit}\t{memo}\t{docnum}\n")
            output.write(f"SPL\tCHECK\t{date}\tAccounts Payable\t{payee}\t{debit}\t{memo}\t{docnum}\n")
            output.write("ENDTRNS\n")

        elif trn_type == "Payment" and row['Payment Method'] == "CREDITCARDMC_CYB_KE":
            # Payment, unknown source, suspense
            output.write(f"TRNS\tDEPOSIT\t{date}\tPesapal\t{payee}\t{credit}\t{memo}\t{docnum}\n")
            output.write(f"SPL\tDEPOSIT\t{date}\tAsk My Accountant\t{payee}\t{-credit}\t{memo}\t{docnum}\n")
            output.write("ENDTRNS\n")

        elif charge > 0 or commission > 0:
            total_fees = charge + commission
            output.write(f"TRNS\tCHECK\t{date}\tPesapal\tBank Charges DTB\t{-total_fees}\tBank fees\t{docnum}\n")
            output.write(f"SPL\tCHECK\t{date}\tBank Service Charges:Bank Charges - DTB\t\t{total_fees}\tBank fees\t{docnum}\n")
            output.write("ENDTRNS\n")

    return output.getvalue()

st.title("DTB to QuickBooks IIF Converter")

uploaded_file = st.file_uploader("Upload DTB Excel File", type=["xlsx"])

if uploaded_file:
    sheet = pd.read_excel(uploaded_file, skiprows=17)
    st.write("### Preview", sheet.head())
    iif_data = generate_iif(sheet)

    st.download_button("Download IIF File", data=iif_data, file_name="DTB_output.iif", mime="text/plain")
